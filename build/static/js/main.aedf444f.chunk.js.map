{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/persons.js","App.js","index.js"],"names":["Persons","props","persons","map","p","key","name","number","onClick","deleteClickHandle","id","Filter","console","log","onChange","handleChange","value","PersonForm","onSubmit","handleSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","indexOf","className","App","useState","setPersons","setNewName","setNewNumber","filter","setFilter","setMessage","useEffect","personService","initialNotes","personToShow","length","person","toLowerCase","includes","event","target","preventDefault","result","find","window","confirm","updatePerson","updateToPerson","catch","error","setTimeout","n","personObject","retunedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aedf444f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = (props) => {\r\n\r\n\r\n    return (\r\n        props.persons.map(p =>\r\n\r\n            <table key={p.name}>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{p.name}</td>\r\n                        <td> {p.number}</td>\r\n                        <td><button onClick={() => props.deleteClickHandle(p.id)}>Delete</button></td>\r\n                    </tr>\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n        ))\r\n\r\n}\r\n\r\n\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter=(props)=>{\r\n    console.log(props)\r\n    return(\r\n      <div>\r\n          Filter shown with<input onChange={props.handleChange} value={props.value}/> \r\n        </div>\r\n    )\r\n  }\r\n  export default Filter","import React from 'react'\r\nconst PersonForm = (props) => {\r\n\r\n\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          name: <input value={props.newName}\r\n            onChange={props.handleNameChange} />\r\n        </div>\r\n  \r\n        <div>number: <input value={props.newNumber}\r\n          onChange={props.handleNumberChange} /></div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  \r\n  }\r\n\r\n  export default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst replace = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\nconst remove = (id) => {\r\n    const promise = axios.delete(`${baseUrl}/${id}`)\r\n\r\n    return promise.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, replace, remove }","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\n\nconst Notification = (props) => {\n\n  if (props.message === null) {\n    return null\n  }\n\n  if (props.message.indexOf(\"Error\") === 0) {\n    return (\n      <div className=\"error\">\n        {props.message}\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"info\">\n        {props.message}\n      </div>\n    )\n  }\n}\n\n\nconst App = (props) => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n\n  const [message, setMessage] = useState(null)\n\n\n\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(initialNotes => {\n        setPersons(initialNotes)\n      })\n  }, [])\n\n\n  const personToShow = filter.length === 0\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const result = persons.find(p => p.name === newName)\n\n    console.log(result)\n    if (result) {\n      if (window.confirm(`${result.name} is allready added on phonebook, replace the number ${result.number} \n      with new one (${newNumber})?`)) {\n\n        const updatePerson = ({ ...result, number: newNumber })\n        personService\n          .replace(result.id, updatePerson)\n          .then(updateToPerson => {\n            setPersons(persons.map(p => p.name === newName ? updateToPerson : p))\n            setMessage(\n              `Person ${updatePerson.name} updated succesfully`\n            )\n\n          })\n          .catch(error => {\n            \n            setMessage(\n              `Error: ${error} Person ${updatePerson.name} was already removed from server`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n            setPersons(persons.filter(n => n.id !== updatePerson.id))\n          })\n      }\n\n\n\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n\n      }\n      personService\n        .create(personObject)\n        .then(retunedPerson => {\n          console.log(retunedPerson)\n          setPersons(persons.concat(retunedPerson))\n        })\n        .then(setMessage(\n          `person ${personObject.name} added phonebook succesfully`\n        ))\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n  const deleteClickHandle = id => {\n\n    const person = persons.find(p => p.id === id)\n    console.log('Button clicked ' + person.name)\n    if (window.confirm(`Are you sure that you want to delete ${person.name}?`)) {\n      console.log('delete clicked')\n      personService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== id))\n        })\n        .catch(error => {\n          setMessage(\n            `Person ${person.name} was already removed from server`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          setPersons(persons.filter(n => n.id !== id))\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n\n\n      <div>\n        <Filter handleChange={handleFilterChange} value={filter} />\n      </div>\n\n      <h2>Add a new</h2>\n      <PersonForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleSubmit={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={personToShow} deleteClickHandle={deleteClickHandle} />\n\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}